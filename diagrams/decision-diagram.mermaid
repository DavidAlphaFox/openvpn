graph TB
subgraph Egress from internal interface
in_not_gateway_mac(fa:fa-ban Drop)
ext_and_in_connected_drop(fa:fa-ban Drop)
in_send(fa:fa-lock encrypt,<br/>send to ext TCP/P stack)
in_subnet(IP dest is local subnet<br/>e.g. 10.38.0.0/16)

in_is_local_subnet(fa:fa-ban Drop)
in_local(Other apps<br/>e.g. ARP,<br/> or DNS resolver,<br/>or DHCP?)
in_ip[decode IP packet]
in_nat(translate src IP from<br/>e.g. 10.38.2.2<br/>to VPN local addr<br/>e.g. 172.16.7.8)
in_connected{currently<br/>connected<br/>to VPN?}
in_if[Ethernet,<br/>is gateway<br/> MAC]
end

in_if -->|not gateway MAC| in_not_gateway_mac
in_if -->|dest is gateway MAC<br/>e.g. 00-f0-0d-f0-0d-00| in_ip
in_subnet --> |gateway IP<br/>e.g.10.38.2.1| in_local
in_if -->|broadcast<br/>ff-ff-ff-ff-ff-ff| in_local

in_subnet --> in_is_local_subnet
in_ip -->|if NAT| in_nat
in_ip--> in_subnet
in_ip --> in_connected
in_nat --> in_connected
in_connected -->|NO| ext_and_in_connected_drop
in_connected -->|YES| in_send


subgraph Ingress packet from external IF
ext_if[Ethernet + TCP/IP]
ext_other(Other apps<br/>not behind VPN,<br/>e.g. SNMP?)
ext_decrypt(fa:fa-lock Decrypt & <br/>decode IP packet)
ext_nat(translate dest IP from<br/>e.g. 172.16.7.8<br/> to internal addr<br/>e.g. 10.38.2.2)
ext_to_in{is for gateway<br/>e.g.10.38.2.1}
ext_subnet{dest is VPN subnet<br/>e.g. 172.16.0.0/16}
ext_handle_secure(Local apps<br/>behind VPN<br/>e.g. SNMP)
ext_send_in(Send to<br/>int. IF)
end

ext_if -->|for current OpenVPN<br/>client TCP connection|ext_decrypt
ext_if --> ext_other

ext_decrypt --> ext_subnet
ext_subnet --> |YES <br/> if NAT| ext_nat
ext_subnet --> |YES| ext_to_in
ext_subnet --> |NO| in_is_local_subnet
ext_nat --> ext_to_in
ext_to_in --> ext_handle_secure
ext_to_in --> ext_send_in
